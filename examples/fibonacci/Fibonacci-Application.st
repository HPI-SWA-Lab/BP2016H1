Object subclass: #Fibonacci	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Fibonacci-Application'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fibonacci class	instanceVariableNames: ''!!Fibonacci class methodsFor: 'as yet unclassified' stamp: 'mt 10/17/2016 18:53'!bench: num	"self bench: 44.	Fibonacci bench: 44  #(0 32986 0 6936)"		^ {		[self primitiveFib: num] timeToRunWithoutGC.		[self primitiveFibRec: num] timeToRunWithoutGC.			[self smalltalkFib: num] timeToRunWithoutGC.		[self smalltalkFibRec: num] timeToRunWithoutGC.	}! !!Fibonacci class methodsFor: 'as yet unclassified' stamp: 'mt 10/17/2016 18:24'!compute: num	"Fibonacci compute: 20"		^ [self primitiveFib: num]			on: Error			do: [:ex |				Transcript showln: ex printString.				self smalltalkFib: num]! !!Fibonacci class methodsFor: 'as yet unclassified' stamp: 'mt 10/17/2016 18:12'!primitiveFib: num	<primitive: 'primitiveFib' module: 'Fibonacci' error: ec>		^ ec caseOf: {		[-1] -> [Error signal: 'Function expects 1 argument.'].		[-2] -> [Error signal: 'Function expects INTEGER argument.'].		[-3] -> [Error signal: 'Fibonacci computation failed.']}			otherwise: [Error signal: ('General error ''{1}'' in Fibonacci plugin.' format: {ec})] ! !!Fibonacci class methodsFor: 'as yet unclassified' stamp: 'mt 10/17/2016 18:40'!primitiveFibRec: num	"Recursive."		<primitive: 'primitiveFibRec' module: 'Fibonacci' error: ec>		^ ec caseOf: {		[-1] -> [Error signal: 'Function expects 1 argument.'].		[-2] -> [Error signal: 'Function expects INTEGER argument.'].		[-3] -> [Error signal: 'Fibonacci computation failed.']}			otherwise: [Error signal: ('General error ''{1}'' in Fibonacci plugin.' format: {ec})] ! !!Fibonacci class methodsFor: 'as yet unclassified' stamp: 'mt 10/17/2016 18:43'!smalltalkFib: num	| a b tmp |	a := 1.	b := 1.	tmp := 0.		3 to: num do: [:ea |		tmp := a.		a := a + b.		b := tmp].		^ a! !!Fibonacci class methodsFor: 'as yet unclassified' stamp: 'mt 10/17/2016 18:46'!smalltalkFibRec: num	^ num <= 2		ifTrue: [1]		ifFalse: [(self smalltalkFibRec: num-1) + (self smalltalkFibRec: num-2)]! !